pub struct Memory {
        pub owner: Pubkey,
            pub data: String,
                pub shared_with: Vec<Pubkey>,
                }

                #[program]
                pub mod solana_memories {
                        use super::*;

                            #[state]
                                pub struct Memories {
                                            pub memories: Vec<Memory>,
                                                }

                                                    #[derive(Accounts)]
                                                        pub struct CreateMemory<'info> {
                                                                    #[account(init)]
                                                                            pub memory: ProgramAccount<'info, Memory>,
                                                                                    pub payer: Signer<'info>,
                                                                                        }

                                                                                            #[derive(Accounts)]
                                                                                                pub struct EditMemory<'info> {
                                                                                                            #[account(mut, has_one = owner)]
                                                                                                                    pub memory: ProgramAccount<'info, Memory>,
                                                                                                                            pub owner: Signer<'info>,
                                                                                                                                }

                                                                                                                                    #[derive(Accounts)]
                                                                                                                                        pub struct ShareMemory<'info> {
                                                                                                                                                    #[account(mut, has_one = owner)]
                                                                                                                                                            pub memory: ProgramAccount<'info, Memory>,
                                                                                                                                                                    pub owner: Signer<'info>,
                                                                                                                                                                            pub recipient: Pubkey,
                                                                                                                                                                                }

                                                                                                                                                                                    #[derive(Accounts)]
                                                                                                                                                                                        pub struct GetMemory<'info> {
                                                                                                                                                                                                    #[account(init, payer = owner)]
                                                                                                                                                                                                            pub memory: ProgramAccount<'info, Memory>,
                                                                                                                                                                                                                    pub owner: Signer<'info>,
                                                                                                                                                                                                                            pub data_len: u32,
                                                                                                                                                                                                                                }

                                                                                                                                                                                                                                    #[access_control(owner(&memory.owner))]
                                                                                                                                                                                                                                        pub fn edit_memory<'info>(
                                                                                                                                                                                                                                                    ctx: Context<'_, '_, '_, 'info, EditMemory<'info>>,
                                                                                                                                                                                                                                                            data: String,
                                                                                                                                                                                                                                                                ) -> ProgramResult {
                                                                                                                                                                                                                                                                            ctx.accounts.memory.data = data;
                                                                                                                                                                                                                                                                                    Ok(())
                                                                                                                                                                                                                                                                                        }

                                                                                                                                                                                                                                                                                            #[access_control(owner(&memory.owner))]
                                                                                                                                                                                                                                                                                                pub fn share_memory<'info>(
                                                                                                                                                                                                                                                                                                            ctx: Context<'_, '_, '_, 'info, ShareMemory<'info>>,
                                                                                                                                                                                                                                                                                                                ) -> ProgramResult {
                                                                                                                                                                                                                                                                                                                            ctx.accounts.memory.shared_with.push(*ctx.accounts.recipient);
                                                                                                                                                                                                                                                                                                                                    Ok(())
                                                                                                                                                                                                                                                                                                                                        }

                                                                                                                                                                                                                                                                                                                                            pub fn get_memory<'info>(
                                                                                                                                                                                                                                                                                                                                                        ctx: Context<'_, '_, '_, 'info, GetMemory<'info>>,
                                                                                                                                                                                                                                                                                                                                                            ) -> ProgramResult {
                                                                                                                                                                                                                                                                                                                                                                        let data = ctx.accounts.memory.data.as_bytes();
                                                                                                                                                                                                                                                                                                                                                                                let memory_data = &mut ctx.accounts.memory.data;
                                                                                                                                                                                                                                                                                                                                                                                        ctx.accounts.memory.shared_with.push(*ctx.accounts.owner.key);
                                                                                                                                                                                                                                                                                                                                                                                                memory_data.push_str(&base64::encode(data));
                                                                                                                                                                                                                                                                                                                                                                                                        memory_data.push_str(&ctx.accounts.owner.to_string());
                                                                                                                                                                                                                                                                                                                                                                                                                Ok(())
                                                                                                                                                                                                                                                                                                                                                                                                                    }

                                                                                                                                                                                                                                                                                                                                                                                                                        pub fn create_memory<'info>(
                                                                                                                                                                                                                                                                                                                                                                                                                                    ctx: Context<'_, '_, '_, 'info, CreateMemory<'info>>,
                                                                                                                                                                                                                                                                                                                                                                                                                                            data: String,
                                                                                                                                                                                                                                                                                                                                                                                                                                                ) -> ProgramResult {
                                                                                                                                                                                                                                                                                                                                                                                                                                                            let memory = &mut ctx.accounts.memory;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    memory.owner = *ctx.accounts.payer.key;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            memory.data = data;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Ok(())
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                        )
                                                                                                                                                                                        }
                                                                                                                                        }
                                                                                                }
                                                        }
                                }
                }
}